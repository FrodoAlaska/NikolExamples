#pragma once 

#include <string>

inline const char* batch_glsl_code() {
  return 
    "#version 460 core\n"
    "\n"
    "// Layouts\n"
    "layout (location = 0) in vec3 aPos;\n"
    "layout (location = 1) in vec2 aTextureCoords;\n"
    "layout (location = 2) in vec4 aColor;\n"
    "\n"
    "// Outputs\n"
    "out VS_OUT {\n"
    "  vec4 out_color;\n"
    "  vec2 tex_coords;\n"
    "} vs_out;\n"
    "\n"
    "void main() {\n"
    "  vs_out.out_color  = aColor;\n"
    "  vs_out.tex_coords = aTextureCoords;\n"
    "\n"
    "  gl_Position = vec4(aPos, 1.0f);\n"
    "}\n"
    "\n"
    "#version 460 core\n"
    "\n"
    "// Outputs\n"
    "layout (location = 0) out vec4 frag_color;\n"
    "\n"
    "// Inputs\n"
    "in VS_OUT {\n"
    "  vec4 out_color;\n"
    "  vec2 tex_coords;\n"
    "} fs_in;\n"
    "\n"
    "// Uniforms\n"
    "uniform sampler2D u_texture;\n"
    "\n"
    "void main() {\n"
    "  frag_color = texture(u_texture, fs_in.tex_coords) * fs_in.out_color;\n"
    "}\n";
}

inline const char* batch_hlsl_code() {
  return
    "struct vs_in {\n"
    "    float3 position   : POS;\n"
    "    float2 tex_coords : TEX;\n"
    "    float4 color      : COLOR;\n"
    "};\n"
    "\n"
    "struct vs_out {\n"
    "    float4 position   : SV_POSITION;\n"
    "    float2 tex_coords : TEX;\n"
    "    float4 color      : COLOR;\n"
    "};\n"
    "\n"
    "vs_out vs_main(vs_in input) {\n"
    "    vs_out output;\n"
    "\n" 
    "    output.position   = float4(input.position, 1.0);\n"
    "    output.tex_coords = input.tex_coords;\n"
    "    output.color      = input.color;\n"
    "\n" 
    "    return output;\n"
    "}\n"
    "\n"
    "Texture2D text    : register(t0);\n"
    "SamplerState samp : register(s0);\n"
    "\n" 
    "float4 ps_main(vs_out input) : SV_TARGET {\n"
    "  float4 color;\n"
    "  color = text.Sample(samp, input.tex_coords) * input.color;\n"
    "\n" 
    "  return color;\n"
    "}\n";
}
