#pragma once

inline const char* default_shader_glsl() {
  return 
    "#version 460 core\n"
    "\n"
    "// Layouts\n"
    "layout (location = 0) in vec3 aPos;\n"
    "layout (location = 1) in vec3 aNormal;\n"
    "layout (location = 2) in vec2 aTextureCoords;\n"
    "\n"
    "// Outputs\n"
    "out VS_OUT {\n"
    "  vec2 tex_coords;\n"
    "} vs_out;\n"
    "\n"
    "layout (std140, binding = 0) uniform Matrices {\n"
    "  mat4 view_projection;\n"
    "};\n"
    "\n"
    "void main() {\n"
    "  vs_out.tex_coords = aTextureCoords;\n"
    "\n"
    "  gl_Position = view_projection * vec4(aPos, 1.0f);\n"
    "}"
    "\n"
    "#version 460 core\n"
    "\n"
    "// Outputs\n"
    "layout (location = 0) out vec4 frag_color;\n"
    "\n"
    "// Inputs\n"
    "in VS_OUT {\n"
    "  vec2 tex_coords;\n"
    "} fs_in;\n"
    "\n"
    "// Uniforms\n"
    "uniform sampler2D u_texture;\n"
    "\n"
    "void main() {\n"
    "  frag_color = vec4(1.0);//texture(u_texture, fs_in.tex_coords);\n"
    "};\n";
}

inline const char* default_shader_hlsl() {
  return 
    "struct vs_in {"
    "  float3 position   : POS;"
    "  float3 normal     : NORMAL;"
    "  float2 tex_coords : TEX;"
    "};"
    "\n"
    "struct vs_out {"
    "  float3 position   : SV_POSITION;"
    "  float2 tex_coords : TEX;"
    "};"
    "\n"
    "cbuff Matrices {"
    "  float4x4 view_projection;"
    "};"
    "\n"
    "vs_out vs_main(vs_in input) {"
    "  vs_out out;"
    "\n"
    "  out.position   = mul(view_projection, input.position);"
    "  out.tex_coords = input.tex_coords;"
    "\n"
    "  return out;"
    "}"
    "\n"
    "Texture2D text    : register(t0);"
    "SamplerState samp : register(s0);"
    "\n"
    "float4 ps_main(vs_out input) {"
    "  return float4(1.0, 1.0, 1.0, 1.0);"
    "}";
}
